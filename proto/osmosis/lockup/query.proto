syntax = "proto3";
package osmosis.lockup;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "osmosis/lockup/lock.proto";

option go_package = "github.com/c-osmosis/osmosis/x/lockup/types";

// Query defines the gRPC querier service.
service Query {
    // Return full balance of the module
	rpc ModuleBalance(ModuleBalanceRequest) returns (ModuleBalanceResponse);
	// Return locked balance of the module
	rpc ModuleLockedAmount(ModuleLockedAmountRequest) returns (ModuleLockedAmountResponse);

	// Returns whole unlockable coins which are not withdrawn yet
	rpc AccountUnlockableCoins(AccountUnlockableCoinsRequest) returns (AccountUnlockableCoinsResponse);
	// Return a locked coins that can't be withdrawn
	rpc AccountLockedCoins(AccountLockedCoinsRequest) returns (AccountLockedCoinsResponse);

	// Returns the total locks of an account whose unlock time is beyond timestamp
	rpc AccountLockedPastTime(AccountLockedPastTimeRequest) returns (AccountLockedPastTimeResponse);
	// Returns the total unlocks of an account whose unlock time is before timestamp
	rpc AccountUnlockedBeforeTime(AccountUnlockedBeforeTimeRequest) returns (AccountUnlockedBeforeTimeResponse);

	// Same as GetAccountLockedPastTime but denom specific
	rpc AccountLockedPastTimeDenom(AccountLockedPastTimeDenomRequest) returns (AccountLockedPastTimeDenomResponse);
	// Returns the length of the initial lock time when the lock was created
	rpc Locked(LockedRequest) returns (LockedResponse);

	// Returns account locked with duration longer than specified
	rpc AccountLockedLongerThanDuration(AccountLockedLongerDurationRequest) returns (AccountLockedLongerDurationResponse);
	// Returns account locked with duration longer than specified with specific denom
	rpc AccountLockedLongerThanDurationDenom(AccountLockedLongerDurationDenomRequest) returns (AccountLockedLongerDurationDenomResponse);
}

message ModuleBalanceRequest {};
message ModuleBalanceResponse {
	repeated cosmos.base.v1beta1.Coin coins = 1
        [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
};

message ModuleLockedAmountRequest {};
message ModuleLockedAmountResponse {
	repeated cosmos.base.v1beta1.Coin coins = 1
        [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
};

message AccountUnlockableCoinsRequest {
	bytes owner = 1 
        [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
};
message AccountUnlockableCoinsResponse {
	repeated cosmos.base.v1beta1.Coin coins = 1
        [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
};

message AccountLockedCoinsRequest {
	bytes owner = 1 
        [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
};
message AccountLockedCoinsResponse {
	repeated cosmos.base.v1beta1.Coin coins = 1
        [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
};

message AccountLockedPastTimeRequest {
	bytes owner = 1 
        [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
    google.protobuf.Timestamp timestamp = 2
        [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"timestamp\""];
};
message AccountLockedPastTimeResponse {
	repeated PeriodLock locks = 1
		[(gogoproto.nullable) = false];
};

message AccountUnlockedBeforeTimeRequest {
	bytes owner = 1 
        [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
    google.protobuf.Timestamp timestamp = 2
        [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"timestamp\""];
};
message AccountUnlockedBeforeTimeResponse {
	repeated PeriodLock locks = 1
		[(gogoproto.nullable) = false];
}

message AccountLockedPastTimeDenomRequest {
	bytes owner = 1 
        [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
    google.protobuf.Timestamp timestamp = 2
        [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"timestamp\""];
    string denom = 3;
};
message AccountLockedPastTimeDenomResponse {
	repeated PeriodLock locks = 1
		[(gogoproto.nullable) = false];
};

message LockedRequest {
    uint64 lock_id = 1;
};
message LockedResponse {
	PeriodLock lock = 1;
};

message AccountLockedLongerDurationRequest {
	bytes owner = 1 
        [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
    google.protobuf.Duration duration = 2
        [(gogoproto.stdduration) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"duration\""];
};
message AccountLockedLongerDurationResponse {
	repeated PeriodLock locks = 1
		[(gogoproto.nullable) = false];
};

message AccountLockedLongerDurationDenomRequest {
	bytes owner = 1 
        [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
    google.protobuf.Duration duration = 2
		[(gogoproto.stdduration) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"duration\""];
	string denom = 3;
};
message AccountLockedLongerDurationDenomResponse {
	repeated PeriodLock locks = 1
		[(gogoproto.nullable) = false];
};
